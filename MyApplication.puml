@startuml
skinparam class {
  BackgroundColor Snow
}

package Data {
  class UserObj {
    - username : String
    - first_name : String
    - family_name : String
    - telephone : String
    - e_mail : String
    - account : BankAccount
  }

  class BankAccount {
    - currency : float
    - deposit : float
    - debt : float
    - investment : InvestmentObj
  }

  class InvestmentObj {
    - currDataMap: HashMap<String, Float>
    + addCurrDataEntry(name: String, value: Float): void
  }

  class GlobalObj {
    - dataMap: HashMap<String, HashMap<String, Float>>
    - currDataMap: HashMap<String, Float>
    + addDataEntry(date: String, innerMap: HashMap<String, Float>): void
    + addCurrDataEntry(name: String, value: Float): void
  }
}

package Tool {
  class JavaClient {
    + sendAndReceive(s: String): String
  }

  class PasswordHasher {
    + hashPassword(password: String): int
  }
}

package com.example.partjava {
  MyApplication --|> javafx.application.Application
  MyApplication --> Stage
  Stage --> Scene
  Scene --> FXMLLoader
  UserObj --* BankAccount : contains
  BankAccount --* InvestmentObj : contains
  class LoginController {
      + handleLoginButton()
      + handleCreateAccountButton()
  }
  class NewAccountController {
    + handleCreateAccountButton()
    + handleReturnButton()
  }
  class UsersInterfaceController {
    + handleVirementButton()
    + handleLoanButton()
    + handleCryptoButton()
    + handleInvestmentButton()
  }
  class VirementController{
    + handleTransferButton()
    + handleReturnButton()
  }
  class LoanController {
    + handleValidButton()
    + handleReturnButton()
  }
  class CryptoController{
    + handleViewButton()
    + handlePurchaseButton()
    + handleSellButton()
    + handleReturnButton()
  }
  class InvestmentController{
    + handleViewSelfButton()
    + handleViewGlobalButton()
    + handleReturnButton()
  }
  LoginController *--* NewAccountController
  LoginController --* UsersInterfaceController
  UsersInterfaceController *--* VirementController
  UsersInterfaceController *--* LoanController
  UsersInterfaceController *--* CryptoController
  UsersInterfaceController *--* InvestmentController
}

JavaClient <--> Server : interact
LoginController --> JavaClient : calls
LoginController --> PasswordHasher : calls
LoginController --> GlobalObj : interact
LoginController --> UserObj : interact
NewAccountController --> JavaClient : calls
NewAccountController --> PasswordHasher : calls
VirementController --> JavaClient : calls
VirementController --> UserObj : calls
LoanController --> JavaClient : calls
LoanController --> UserObj : calls
CryptoController -->  JavaClient : calls
CryptoController --> GlobalObj : calls
CryptoController --> UserObj : calls
InvestmentController --> GlobalObj : calls
InvestmentController --> UserObj : calls

hide circle
hide empty members
@enduml
